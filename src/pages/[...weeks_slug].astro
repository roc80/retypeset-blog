---
import type { CollectionEntry } from 'astro:content'
import { getCollection, render } from 'astro:content'
import Comment from '@/components/Comment/Index.astro'
import PostDate from '@/components/PostDate.astro'
import TagList from '@/components/TagList.astro'
import BackButton from '@/components/Widgets/BackButton.astro'
import TOC from '@/components/Widgets/TOC.astro'
import { defaultLocale } from '@/config'
import Layout from '@/layouts/Layout.astro'
import { getWeekDescription } from '@/utils/description'

export async function getStaticPaths() {
  const weeks = await getCollection('weeks')

  return weeks
    .filter((week: CollectionEntry<'weeks'>) => {
      // Show drafts in dev mode only
      return (import.meta.env.DEV || !week.data.draft)
        && (week.data.lang === defaultLocale || week.data.lang === '')
    })
    .map((week: CollectionEntry<'weeks'>) => {
      const slug = week.data.abbrlink || week.id
      return {
        params: { weeks_slug: `weeks/${slug}/` },
        props: {
          week,
          lang: defaultLocale,
          supportedLangs: [],
        },
      }
    })
}

const { week } = Astro.props
const slug = week.data.abbrlink || week.id
const description = getWeekDescription(week, 'meta')
const { Content, headings, remarkPluginFrontmatter } = await render(week)
---

<Layout
  postTitle={week.data.title}
  postDescription={description}
  postSlug={week.id}
  >
  <article class="heti">
    <div class="relative">
      <!-- Go Back Button On Desktop -->
      <BackButton />
      <!-- Title -->
      <h1 class="post-title">
        <span
          transition:name={`week-${slug}`}
          data-disable-theme-transition
        >
          {week.data.title}
        </span>
      </h1>
    </div>

    <!-- Date -->
    <div
      id="post-date"
      class="mb-17.2 block c-primary font-time"
      transition:name={`time-${slug}`}
      data-disable-theme-transition
    >
      <PostDate
        date={week.data.pubDate}
        updatedDate={week.data.updated}
        minutes={remarkPluginFrontmatter.minutes}
      />
    </div>
    <!-- Tag List -->
    {week.data.tags?.length > 0 && (
      <div class="mb-17.2">
        <TagList
          tags={week.data.tags}
        />
      </div>
    )}
    <!-- TOC -->
    {week.data.toc && <TOC headings={headings} />}
    <!-- Content -->
    <div id="post-content">
      <Content />
      <!-- Copyright -->
      <div id="post-copyright" />
      <!-- Comment -->
      <Comment />
    </div>
  </article>
</Layout>